name: Deployment Pipeline

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME_PROD: ${{ vars.DOCKER_IMAGE_NAME_PROD }}
  PROJECT_ID: ${{ vars.PROJECT_ID_GGL_PROD }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME_GGL_CLRUN_PROD }}
  REGION: ${{ vars.REGION_GGL_ARTIFACT_PROD }}
  ARTIFACT_REGISTRY: ${{ vars.ARTIFACT_REGISTRY_GGL_ARTIFACT_PROD }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud with Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          # token_format: 'access_token'
          project_id: '${{ env.PROJECT_ID }}'
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      
      - name: Print authenticated account
        run: gcloud auth list
        
      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      # Make unique image name: first 7 char of commit SHA and the GH Actions run number
      - name: Define IMAGE Tag
        run: |
          IMAGE_TAG="sha-$(echo ${GITHUB_SHA} | cut -c1-7)-run-${GITHUB_RUN_NUMBER}"
          echo "IMAGE=${IMAGE_TAG}" >> $GITHUB_ENV
    
      - name: Build and push Docker image to Google Artifact Registry
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          docker compose -f docker/docker-compose.prod.yml build
          echo "Listing built images:"
          docker images
          echo "Tagged image: ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE }}"
          docker tag ${{ env.DOCKER_IMAGE_NAME_PROD }} ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE }}
          docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE }}

      - name: Deploy to Google Cloud Run
        id: deploy_to_cloud_run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE }}
          region: ${{ env.REGION }}
          # Pass args Cloud Run will use to start the service in the container
          flags: --args="uvicorn,src.serve:app,--host,0.0.0.0,--port,8080"
          # Note: allow-unauthenticated is set in the service configs, not here.
          # https://github.com/google-github-actions/deploy-cloudrun?tab=readme-ov-file#allowing-unauthenticated-requests

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy_to_cloud_run.outputs.url }}